//: rozdelenie pamäte : zásobník(sú tu uložené dáta premenných), hromada, pamäť periód(miesto kde je kód) 
int k; vyhradzuje miesto v zásobniku

pointer len ukazuje v hromade adresu (int*p_m;) 
! nikdy nesmieme používať pointer, ktorý nemá danú adresu(nie je inicializovaný)
Ako inicializovať p_m = &k;

(napr- int*p_m = &k;)

Pri zápise hodnoty na misto kde je:
*p_m=10; 

2/možnosť použitia
na uchmatnutie pamäte (hromady), na vytvorenie pola na hromade. Je dynamické teda množstvo prvov nie je statické

int*p_h= (int*)malloc(sizeof(int)*10);
void* malloc (int pocet_bajtov);
free(p_h);  !ak ju nevyčistíme potom je to závažná chyba


//
#include <stdio.h>
// pri používaní malloc:
#include <stdlib.h>

int main(int argc, char **argv){

	int zasobnik;
	int *pPrvy = &zasobnik;
	
	*pPrvy=100;
	
	//: int *Pdruhy = (int *)malloc(sizeof(int));
		//vytvorili sme pamäť pre jednu hodnotu int
		//lepšie to urobiť v dvoch korokoch
	int *pDruhy;	
	if((pDruhy=(int *)malloc(sizeof(int)))==NULL)
	{
		puts("Neda sa alokovat pamat!");
		exit(1);
		}	
	
	//aj keď žiadame len o 1 bajt tak vždy dostaneme viac, vzhľadom na hardvér viac (Win napr. 16-bytov)	
		//int *Pdruhy = (int *)malloc(1);
	


	return 0;
}

